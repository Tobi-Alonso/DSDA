--Rs232 transmiter top level
--includes
	library ieee;
	use ieee.std_logic_1164.all;
	use work.Rs232_tx_pack.all;

	entity Rs232_tx is
 	 	port(
 	 		--clock related
			clk_50M:	in std_logic;
			clk_sel:	in std_logic_vector(1 downto 0);
			--on signal
			ini_tx:		in std_logic;
			--message selection
			p0:			in std_logic;
			p1:			in std_logic;
			p2:			in std_logic;
			p3:			in std_logic;
			all_p:		in std_logic;
			--outputs
			not_estable_frec:	out std_logic;
			tx:					out std_logic;
			transmitting:		out std_logic;
			tx_active:			out std_logic
	  	) ;
	end entity ; -- Rs232_tx

	architecture arch of Rs232_tx is
	
		signal pll_out_wire: std_logic;
		signal pll_lock_wire: std_logic;
		signal sync_pll_lock_wire: std_logic;
		signal tx_clk_wire: std_logic;
		signal rst_wire: std_logic;
		signal char_ready_wire: std_logic;
		signal next_bit_wire: std_logic;
		signal last_bit_wire: std_logic;
		signal parity_bit_wire: std_logic;
		signal ready2send_wire: std_logic;
		signal calc_parity_wire: std_logic;
		signal shift_reg_wire: std_logic;
		signal start_timer_wire: std_logic;
		signal not_rst_wire: std_logic;

		signal data_bus: std_logic_vector(CHAR_WIDTH-1 downto 0);
		signal parity_bus: std_logic_vector(CHAR_WIDTH-1 downto 0);

		begin
		pll: ip_pll port map('0',clk_50M,pll_out_wire,pll_lock_wire );
		frec_div: FrecDivider generic map(HALF_COUNT_115200,HALF_COUNT_38400,HALF_COUNT_9600,HALF_COUNT_4800)
								port map(pll_out_wire,rst_wire,clk_sel,tx_clk_wire );
		ffd: reg	generic map(1)	port map(pll_lock_wire,rst_wire,tx_clk_wire,sync_pll_lock_wire );
		shift_reg: shift_reg	port map(data_bus,rst_wire,tx_clk_wire,shift_reg_wire,char_ready_wire,parity_bus );
		reset_module: Reset_module	port map(tx_clk_wire,ini_tx,rst_wire );
		inversor1: inversor	port map(sync_pll_lock_wire,not_estable_frec );
		parity_calc: Parity_cal	port map(tx_clk_wire,calc_parity_wire,parity_bus,parity_bit_wire );
		inversor2: inversor	port map(rst_wire,not_rst_wire );
		and_gate: and_gate	port map(not_rst_wire,ini_tx,tx_active );
		timer: timer	port map(tx_clk_wire,rst_wire,start_timer_wire,last_bit_wire);
		phrase_loader: Phrase_loader	port map(
											clk=>tx_clk_wire,
											p0=>p0,
											p1=>p1,
											p2=>p2,
											p3=>p3
											all_p=>all_p,
											rst=>rst_wire,
											ready=>ready2send_wire,

											char=>data_bus,
											char_ready=>char_ready_wire
										);
		rs232_control: Rs232_control	port map( 
											clk<=tx_clk_wire,
											estable_frec<=sync_pll_lock_wire,
											char_rdy<=char_ready_wire,
											info_bit<=next_bit_wire,
											last_bit<=last_bit_wire,
											parity_bit<=parity_bit_wire,
											rst<=rst_wire,

											transmitting<=transmitting,
											ready<=	ready2send_wire,	
											calc_parity<=calc_parity_wire
											tx<=tx,			
											shift<=	shift_reg_wire,		
											start_timer<=start_timer_wire
									 	 ) ;
	end architecture ; -- arch